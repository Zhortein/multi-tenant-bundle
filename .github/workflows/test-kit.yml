name: Test Kit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-kit:
    name: Test Kit (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.3']
        
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: multi_tenant_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo_pgsql, intl, json, mbstring
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Validate composer.json
        run: composer validate --strict

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse src -c phpstan.neon --memory-limit=512M

      - name: Run Unit Tests
        run: vendor/bin/phpunit tests/Unit --no-coverage

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U test_user; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Setup PostgreSQL test database
        run: |
          PGPASSWORD=test_password psql -h localhost -U test_user -d multi_tenant_test -f tests/sql/init.sql

      - name: Run RLS Isolation Tests
        run: vendor/bin/phpunit tests/Integration/RlsIsolationTest.php --no-coverage
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/multi_tenant_test

      - name: Run Resolver Chain Tests
        run: vendor/bin/phpunit tests/Integration/ResolverChainHttpTest.php tests/Integration/ResolverChainTest.php --no-coverage
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/multi_tenant_test

      - name: Run Messenger Tests
        run: vendor/bin/phpunit tests/Integration/MessengerTenantPropagationTest.php --no-coverage
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/multi_tenant_test

      - name: Run CLI Tests
        run: vendor/bin/phpunit tests/Integration/CliTenantContextTest.php --no-coverage
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/multi_tenant_test

      - name: Run Decorators Tests
        run: vendor/bin/phpunit tests/Integration/DecoratorsTest.php --no-coverage
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/multi_tenant_test

      - name: Run All Integration Tests
        run: vendor/bin/phpunit tests/Integration --no-coverage
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/multi_tenant_test